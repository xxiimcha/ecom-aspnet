@page "/sign-up"
@using Ecommerce.Components.Shared
@using Ecommerce.Components.Shared.Misc
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="sign-in-page">
    <div class="image">
        <div class="logo">
            <svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 500 500"><path d="M345.09,320.13l103.8,143.38c-27.17,0-51.73.28-76.28-.33-3.2-.08-7-4.19-9.33-7.33-27.24-37.2-54.43-74.43-81.14-112-5-7.08-10.33-9.7-18.93-9.57-33.26.48-66.54.2-101.19.2v128H97.28V334.79H32.44V269.36H96.61c0-21,0-40.54,0-60.11.08-60.93,41.1-102.27,101.93-102.43,56.37-.15,112.74-.24,169.1.2,8.88.06,12.84-2.55,15.11-11.15,4.57-17.3,10.05-34.39,15.79-51.36,1.07-3.18,5-7.57,7.75-7.66,20-.66,40-.35,61.26-.35-1,4.73-1.43,8.35-2.49,11.78Q436,143.11,406.73,237.9C395,275.8,380.83,294.64,345.09,320.13Zm-183.41-50.6h15.83c35,0,70.06-.57,105.07.2,25.17.55,43.81-10.7,54.07-32,9.86-20.44,15.3-43,23.15-66-57.52,0-112.54-.4-167.54.24-16.72.19-29.44,12.64-30.3,29.27C160.83,223.35,161.68,245.53,161.68,269.53Z" /></svg>
        </div>
    </div>

    <div class="form">
        <div class="sub">
            <p class="light">Already have an account?</p>

            <a href="/">Sign In</a>
        </div>

        <div class="main">
            <h1>Sign up</h1>

            <div class="inputs">
                <div class="input-group">
                    <p class="label light">First Name</p>
                    <input type="text" placeholder="John" @bind="FirstName">
                </div>

                <div class="input-group">
                    <p class="label light">Last Name</p>
                    <input type="text" placeholder="Doe" @bind="LastName">
                </div>

                <div class="input-group">
                    <p class="label light">Email Address</p>
                    <input type="email" placeholder="john@email.com" @bind="Email">
                </div>

                <div class="input-group">
                    <p class="label light">Password</p>
                    <input type="password" placeholder="Password" @bind="Password">
                </div>
            </div>

            <button class="primary" @onclick="RegisterUserAsync">Sign up</button>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <p class="error">@ErrorMessage</p>
            }

            @if (!string.IsNullOrEmpty(SuccessMessage))
            {
                <p class="success">@SuccessMessage</p>
            }
        </div>
    </div>
</div>

@code {
    private string FirstName { get; set; } = string.Empty;
    private string LastName { get; set; } = string.Empty;
    private string Email { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string ErrorMessage { get; set; } = string.Empty;
    private string SuccessMessage { get; set; } = string.Empty;

    private async Task RegisterUserAsync()
    {
        try
        {
            var requestBody = new
            {
                first_name = FirstName,
                last_name = LastName,
                email = Email,
                password = Password
            };

            var response = await HttpClient.PostAsJsonAsync("https://prof-elec.vercel.app/register", requestBody);

            if (response.IsSuccessStatusCode)
            {
                SuccessMessage = "Account created successfully!";
                ErrorMessage = string.Empty;
                await Task.Delay(2000); // Delay to show success message
                Navigation.NavigateTo("/"); // Redirect to Sign In
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
            {
                ErrorMessage = "Required fields are missing or the email already exists.";
                SuccessMessage = string.Empty;
            }
            else
            {
                ErrorMessage = "An unknown error occurred. Please try again.";
                SuccessMessage = string.Empty;
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
            SuccessMessage = string.Empty;
        }
    }
}
